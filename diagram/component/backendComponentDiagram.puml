@startuml
!include <C4/C4_Component>

$addRelTagToLegend(D_Rel, "black", "gray", $DASHED_LINE, Not always executed, dashed line)

!unquoted procedure D_Rel($from, $to, $label, $techn="", $descr="", $sprite="", $tags="D_Rel", $link="", $direction = "")
!if ($direction == right)
    $getRel(("-[dashed]right->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!elseif ($direction == left)
    $getRel(("-[dashed]left->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!elseif ($direction == up)
    $getRel(("-[dashed]up->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!elseif ($direction == down)
    $getRel(("-[dashed]down->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!else
    $getRel("-[dashed]->>", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!endif
increment()
!endprocedure

!unquoted procedure D_Rel_R($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
D_Rel($from, $to, $label, $techn, $descr, $sprite, D_Rel, $link, right)
!endprocedure

!unquoted procedure D_Rel_L($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
D_Rel($from, $to, $label, $techn, $descr, $sprite, D_Rel, $link, left)
!endprocedure

!unquoted procedure D_Rel_U($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
D_Rel($from, $to, $label, $techn, $descr, $sprite, D_Rel, $link, up)
!endprocedure

!unquoted procedure D_Rel_D($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
D_Rel($from, $to, $label, $techn, $descr, $sprite, D_Rel, $link, down)
!endprocedure
title TripTop -  backend component Diagram

Container(api_gateway, API Gateway, Java Spring Boot, Authenticeerd en authorizeerd api requests)

Boundary(backend, "Triptop", "Backend Systeem") {
    Component(backend_request_interceptor, RequestInterceptor, Spring Boot Component, Onderschept alle requests naar de backend en staat deze alleen toe als die geauthorizeerd is)
    Component(backend_auth, Auth, Spring Boot Component, Controleert of de request de token gemaakt in de ApiGateway heeft.)
    Component(backend_controller, BouwsteenController, Spring MVC Controller, Handles API requests)
    Component(backend_service, BouwsteenService, Spring Boot Service, Bevat logica om acties met de bouwstenen te ondernemen als ze in een bepaalde staat zijn)
    Component(backend_repository, BouwsteenRepository, Spring Boot Repository, Bevat logica om bouwstenen op te halen en op te slaan)
    Component(backend_api_service, "ApiService", "Spring Boot Service", "Haalt data uit de API om deze te verwerken")
    Component(backend_api, "API", "Spring Boot Component", "Verstuurt API-verzoeken naar externe API's")

    Rel_R(backend_request_interceptor, backend_auth, Authorizeerd requests met)
    D_Rel_D(backend_request_interceptor, backend_controller, Verstuurt geauthorizeerde verzoeken door)
    Rel_D(backend_controller, backend_service, gebruikt)
    D_Rel_D(backend_service, backend_repository, gebruikt)
    Rel_R(backend_service, backend_api_service, gebruikt)
    Rel_D(backend_api_service, backend_api, gebruikt)
}

Rel_D(api_gateway, backend_request_interceptor, Stuurt request door, HTTP/JSON)

ContainerDb(db, Database, MongoDb, Slaat bouwstenen op)
Rel_D(backend_repository, db, Leest en schrijft data, MongoDB Wire Protocol)

Container_Ext(api, "Externe API", "Verschillende API's", "Bevat informatie over bouwsteen")
Rel_R(backend_api, api, stuurt API-verzoek, HTTP/JSON)



SHOW_LEGEND()

@enduml
