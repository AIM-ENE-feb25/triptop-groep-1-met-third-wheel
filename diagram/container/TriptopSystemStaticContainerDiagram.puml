@startuml "Container diagram voor het Triptop systeem"
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

SHOW_PERSON_OUTLINE()
LAYOUT_WITH_LEGEND()

title "Container diagram voor het Triptop systeem"
Person(traveler, "Reiziger", "<<Persoon>>\nEen persoon die een vakantiereis wil plannen, boeken en beheren door verschillende bouwstenen te combineren.")

Boundary(system, "Triptop", "Systeem") {
    ContainerDb(db, "Database", "MongoDB", "Slaat inlogdata van gebruikers en hun reisgegevens op")
    Container(frontend, "Web applicatie", "React.js", "De website waarmee de gebruiker een reis kan plannen")
    Container(backend, "Backend", "Java Spring Boot", "Behandelt API-requests, zorgt dat data opgeslagen wordt en geeft de benodigde data terug of door naar andere API's")
}

Rel_D(traveler, frontend, "Stelt reis samen op")
Rel_D(frontend, backend, "Verstuurt API requests", "HTTP")
Rel_U(backend, frontend, "Stuurt gegevens terug", "HTTP")
Rel_U(backend, db, "leest/schrijft data", "JSON")

Container_Ext(notification, "Notificatiediensten", "Amazon SES API", "Stuurt e-mail naar de gebruiker")
Container_Ext(autoverhuur, "Autoverhuurdiensten", "Cheap Flights, Booking.com, Real-time TripAdvisor Scraper API", "Laat beschikbare auto's zien")
Container_Ext(transport, "Transportdiensten", "NS API, Cheap Flights", "Laat beschikbare transport mogelijkheden zien")
Container_Ext(accommodatie, "Accomodatiediensten", "Booking.com, AirBnB, Real-time TripAdvisor Scraper API", "Laat beschikbare accommodatie mogelijkheden zien")
Container_Ext(activiteiten, "Activiteitendiensten", "Real-time TripAdvisor Scraper API", "Laat beschikbare activiteiten zien in de omgeving")
Container_Ext(kaarten, "Kaartendiensten", "Google Maps Places, True Way Direction", "Laat routes zien")
Container_Ext(identity, "IdentityProvider", "WireMock", "Geeft tokens voor gebruikers en slaat deze op")
Container_Ext(restaurant, "Restaurantdiensten", "Uber Eats Scraper APi, Real-time TripAdvisor Scraper API", "Laat beschikbare restaurants in de omgeving zien")

Lay_L(backend, db)

Rel_R(frontend, identity, "doet authenticatie", "HTTP")
Rel_L(identity, frontend, "geeft token terug","HTTP")
Rel_U(backend, identity, "valideert token","HTTP")
Rel_D(identity, backend, "geeft response over validatie", "HTTP")

Rel(backend, notification, "Stuurt notificatieverzoek", "HTTP")

Rel(backend, autoverhuur, "Vraagt data op met locatie", "HTTP")
Rel(autoverhuur, backend, "Stuurt data over auto's terug", "HTTP")

Rel(backend, transport, "Vraagt data op met begin- en eindpunt", "HTTP")
Rel(transport, backend, "Stuurt data over transport terug", "HTTP")

Rel(backend, accommodatie, "Vraagt data op met locatie", "HTTP")
Rel(accommodatie, backend, "Stuurt data over acommmodatie terug", "HTTP")

Rel(backend, activiteiten, "Vraagt data op met locatie", "HTTP")
Rel(activiteiten, backend, "Stuurt data over activiteiten terug", "HTTP")

Rel(backend, kaarten, "Vraagt data op met locaties", "HTTP")
Rel(kaarten, backend, "Stuurt data over routes terug", "HTTP")

Rel(backend, restaurant, "Vraagt data op met locatie", "HTTP")
Rel(restaurant, backend, "Stuurt data over restaurants terug", "HTTP")




@enduml